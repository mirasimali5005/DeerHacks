{"ast":null,"code":"var _jsxFileName = \"/Users/mirasimali/DeerHacks/Frontend/my-app/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\n// import { Moon, Sun } from 'lucide-react';\n// import { jwtDecode } from \"jwt-decode\";  // FIXED IMPORT\n// import './App.css';\n\n// const GOOGLE_CLIENT_ID = \"23212139674-c1b61g95jaf7as88m353jom7b35t6rfs.apps.googleusercontent.com\"; // Replace with your actual Client ID\n\n// const App = () => {\n//   const [isDark, setIsDark] = useState(() => {\n//     const savedTheme = localStorage.getItem('theme');\n//     return savedTheme ? JSON.parse(savedTheme) : true;\n//   });\n\n//   const [isLogin, setIsLogin] = useState(true);\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     password: '',\n//     confirmPassword: '',\n//   });\n//   const [error, setError] = useState('');\n//   const [user, setUser] = useState(null);\n\n//   useEffect(() => {\n//     localStorage.setItem('theme', JSON.stringify(isDark));\n//   }, [isDark]);\n\n//   const toggleTheme = () => {\n//     setIsDark(prev => !prev);\n//   };\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     if (!isLogin && !formData.name.trim()) {\n//       setError(\"Name is required!\");\n//       return;\n//     }\n\n//     if (!isLogin && formData.password !== formData.confirmPassword) {\n//       setError(\"Passwords don't match!\");\n//       return;\n//     }\n\n//     setError('');\n//     console.log(isLogin ? 'Logging in...' : 'Signing up...', formData);\n//   };\n\n//   const handleGoogleSuccess = (credentialResponse) => {\n//     const decoded = jwtDecode(credentialResponse.credential); // FIXED DECODE FUNCTION\n//     setUser(decoded);\n//     console.log(\"Google User:\", decoded);\n//   };\n\n//   const handleGoogleFailure = () => {\n//     setError(\"Google Sign-In failed. Please try again.\");\n//   };\n\n//   const currentTheme = isDark ? 'dark' : 'light';\n\n//   return (\n//     <GoogleOAuthProvider clientId={GOOGLE_CLIENT_ID}>\n//       <div className={`theme-container ${currentTheme}`}>\n//         <button\n//           onClick={toggleTheme}\n//           className={`theme-toggle ${currentTheme}`}\n//         >\n//           {isDark ? <Sun size={20} /> : <Moon size={20} />}\n//         </button>\n\n//         <div className=\"main-container\">\n//           <div className=\"form-container\">\n//             <div className={`form-box ${currentTheme}`}>\n//               <h2 className={`title ${currentTheme}`}>\n//                 {isLogin ? 'Welcome Back' : 'Create Account'}\n//               </h2>\n\n//               {error && (\n//                 <div className=\"error-message\">\n//                   <p className=\"error-text\">{error}</p>\n//                 </div>\n//               )}\n\n//               {user ? (\n//                 <div className=\"user-info\">\n//                   <img src={user.picture} alt=\"User\" className=\"user-avatar\" />\n//                   <p>{user.name}</p>\n//                   <p>{user.email}</p>\n//                 </div>\n//               ) : (\n//                 <>\n//                   <form onSubmit={handleSubmit} className=\"form\">\n//                     {!isLogin && (\n//                       <input\n//                         type=\"text\"\n//                         name=\"name\"\n//                         placeholder=\"Full Name\"\n//                         value={formData.name}\n//                         onChange={handleChange}\n//                         required={!isLogin}\n//                         className={`input-field ${currentTheme}`}\n//                       />\n//                     )}\n\n//                     <input\n//                       type=\"email\"\n//                       name=\"email\"\n//                       placeholder=\"Email\"\n//                       value={formData.email}\n//                       onChange={handleChange}\n//                       required\n//                       className={`input-field ${currentTheme}`}\n//                     />\n\n//                     <input\n//                       type=\"password\"\n//                       name=\"password\"\n//                       placeholder=\"Password\"\n//                       value={formData.password}\n//                       onChange={handleChange}\n//                       required\n//                       className={`input-field ${currentTheme}`}\n//                     />\n\n//                     {!isLogin && (\n//                       <input\n//                         type=\"password\"\n//                         name=\"confirmPassword\"\n//                         placeholder=\"Confirm Password\"\n//                         value={formData.confirmPassword}\n//                         onChange={handleChange}\n//                         required\n//                         className={`input-field ${currentTheme}`}\n//                       />\n//                     )}\n\n//                     <button type=\"submit\" className=\"submit-button\">\n//                       {isLogin ? 'Sign In' : 'Create Account'}\n//                     </button>\n//                   </form>\n\n//                   <div className=\"or-divider\">OR</div>\n\n//                   <GoogleLogin\n//                     onSuccess={handleGoogleSuccess}\n//                     onError={handleGoogleFailure}\n//                   />\n//                 </>\n//               )}\n\n//               <div className=\"toggle-text\">\n//                 <button\n//                   onClick={() => setIsLogin(!isLogin)}\n//                   className={`toggle-button ${currentTheme}`}\n//                 >\n//                   {isLogin ? (\n//                     <>\n//                       Need an account? <span className=\"underline-text\">Sign up</span>\n//                     </>\n//                   ) : (\n//                     <>\n//                       Already have an account? <span className=\"underline-text\">Sign in</span>\n//                     </>\n//                   )}\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </GoogleOAuthProvider>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from \"react-router-dom\";\nimport { Moon, Sun } from \"lucide-react\";\nimport Dashboard from \"./Dashboard\"; // Import Dashboard\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GOOGLE_CLIENT_ID = \"23212139674-c1b61g95jaf7as88m353jom7b35t6rfs.apps.googleusercontent.com\"; // Replace with actual Client ID\n\nconst Login = () => {\n  _s();\n  const navigate = useNavigate(); // Allows navigation\n\n  const [isDark, setIsDark] = useState(() => {\n    const savedTheme = localStorage.getItem(\"theme\");\n    return savedTheme ? JSON.parse(savedTheme) : true;\n  });\n  const [isLogin, setIsLogin] = useState(true);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    localStorage.setItem(\"theme\", JSON.stringify(isDark));\n  }, [isDark]);\n  const toggleTheme = () => {\n    setIsDark(prev => !prev);\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!isLogin && !formData.name.trim()) {\n      setError(\"Name is required!\");\n      return;\n    }\n    if (!isLogin && formData.password !== formData.confirmPassword) {\n      setError(\"Passwords don't match!\");\n      return;\n    }\n    setError(\"\");\n    console.log(isLogin ? \"Logging in...\" : \"Signing up...\", formData);\n\n    // Simulate login success by redirecting\n    navigate(\"/dashboard\");\n  };\n  const handleGoogleSuccess = credentialResponse => {\n    const decoded = jwtDecode(credentialResponse.credential);\n    setUser(decoded);\n    console.log(\"Google User:\", decoded);\n\n    // Redirect to Dashboard\n    navigate(\"/dashboard\");\n  };\n  const handleGoogleFailure = () => {\n    setError(\"Google Sign-In failed. Please try again.\");\n  };\n  const currentTheme = isDark ? \"dark\" : \"light\";\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: GOOGLE_CLIENT_ID,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `theme-container ${currentTheme}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTheme,\n        className: `theme-toggle ${currentTheme}`,\n        children: isDark ? /*#__PURE__*/_jsxDEV(Sun, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Moon, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `form-box ${currentTheme}`,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: `title ${currentTheme}`,\n              children: isLogin ? \"Welcome Back\" : \"Create Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-text\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), user ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: user.picture,\n                alt: \"User\",\n                className: \"user-avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                className: \"form\",\n                children: [!isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"name\",\n                  placeholder: \"Full Name\",\n                  value: formData.name,\n                  onChange: handleChange,\n                  required: !isLogin,\n                  className: `input-field ${currentTheme}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  name: \"email\",\n                  placeholder: \"Email\",\n                  value: formData.email,\n                  onChange: handleChange,\n                  required: true,\n                  className: `input-field ${currentTheme}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  name: \"password\",\n                  placeholder: \"Password\",\n                  value: formData.password,\n                  onChange: handleChange,\n                  required: true,\n                  className: `input-field ${currentTheme}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  name: \"confirmPassword\",\n                  placeholder: \"Confirm Password\",\n                  value: formData.confirmPassword,\n                  onChange: handleChange,\n                  required: true,\n                  className: `input-field ${currentTheme}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"submit-button\",\n                  children: isLogin ? \"Sign In\" : \"Create Account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"or-divider\",\n                children: \"OR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n                onSuccess: handleGoogleSuccess,\n                onError: handleGoogleFailure\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"toggle-text\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setIsLogin(!isLogin),\n                className: `toggle-button ${currentTheme}`,\n                children: isLogin ? \"Need an account? Sign up\" : \"Already have an account? Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n};\n\n// Main App with Routing\n_s(Login, \"zsZlYzLsgwEpMve/3aulAlbf8tc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 358,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GoogleOAuthProvider","GoogleLogin","jwtDecode","BrowserRouter","Router","Routes","Route","useNavigate","Moon","Sun","Dashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","GOOGLE_CLIENT_ID","Login","_s","navigate","isDark","setIsDark","savedTheme","localStorage","getItem","JSON","parse","isLogin","setIsLogin","formData","setFormData","name","email","password","confirmPassword","error","setError","user","setUser","setItem","stringify","toggleTheme","prev","handleChange","e","target","value","handleSubmit","preventDefault","trim","console","log","handleGoogleSuccess","credentialResponse","decoded","credential","handleGoogleFailure","currentTheme","clientId","children","className","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","src","picture","alt","onSubmit","type","placeholder","onChange","required","onSuccess","onError","_c","App","path","element","_c2","$RefreshReg$"],"sources":["/Users/mirasimali/DeerHacks/Frontend/my-app/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\n// import { Moon, Sun } from 'lucide-react';\n// import { jwtDecode } from \"jwt-decode\";  // FIXED IMPORT\n// import './App.css';\n\n// const GOOGLE_CLIENT_ID = \"23212139674-c1b61g95jaf7as88m353jom7b35t6rfs.apps.googleusercontent.com\"; // Replace with your actual Client ID\n\n// const App = () => {\n//   const [isDark, setIsDark] = useState(() => {\n//     const savedTheme = localStorage.getItem('theme');\n//     return savedTheme ? JSON.parse(savedTheme) : true;\n//   });\n\n//   const [isLogin, setIsLogin] = useState(true);\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     password: '',\n//     confirmPassword: '',\n//   });\n//   const [error, setError] = useState('');\n//   const [user, setUser] = useState(null);\n\n//   useEffect(() => {\n//     localStorage.setItem('theme', JSON.stringify(isDark));\n//   }, [isDark]);\n\n//   const toggleTheme = () => {\n//     setIsDark(prev => !prev);\n//   };\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     if (!isLogin && !formData.name.trim()) {\n//       setError(\"Name is required!\");\n//       return;\n//     }\n\n//     if (!isLogin && formData.password !== formData.confirmPassword) {\n//       setError(\"Passwords don't match!\");\n//       return;\n//     }\n\n//     setError('');\n//     console.log(isLogin ? 'Logging in...' : 'Signing up...', formData);\n//   };\n\n//   const handleGoogleSuccess = (credentialResponse) => {\n//     const decoded = jwtDecode(credentialResponse.credential); // FIXED DECODE FUNCTION\n//     setUser(decoded);\n//     console.log(\"Google User:\", decoded);\n//   };\n\n//   const handleGoogleFailure = () => {\n//     setError(\"Google Sign-In failed. Please try again.\");\n//   };\n\n//   const currentTheme = isDark ? 'dark' : 'light';\n\n//   return (\n//     <GoogleOAuthProvider clientId={GOOGLE_CLIENT_ID}>\n//       <div className={`theme-container ${currentTheme}`}>\n//         <button\n//           onClick={toggleTheme}\n//           className={`theme-toggle ${currentTheme}`}\n//         >\n//           {isDark ? <Sun size={20} /> : <Moon size={20} />}\n//         </button>\n\n//         <div className=\"main-container\">\n//           <div className=\"form-container\">\n//             <div className={`form-box ${currentTheme}`}>\n//               <h2 className={`title ${currentTheme}`}>\n//                 {isLogin ? 'Welcome Back' : 'Create Account'}\n//               </h2>\n\n//               {error && (\n//                 <div className=\"error-message\">\n//                   <p className=\"error-text\">{error}</p>\n//                 </div>\n//               )}\n\n//               {user ? (\n//                 <div className=\"user-info\">\n//                   <img src={user.picture} alt=\"User\" className=\"user-avatar\" />\n//                   <p>{user.name}</p>\n//                   <p>{user.email}</p>\n//                 </div>\n//               ) : (\n//                 <>\n//                   <form onSubmit={handleSubmit} className=\"form\">\n//                     {!isLogin && (\n//                       <input\n//                         type=\"text\"\n//                         name=\"name\"\n//                         placeholder=\"Full Name\"\n//                         value={formData.name}\n//                         onChange={handleChange}\n//                         required={!isLogin}\n//                         className={`input-field ${currentTheme}`}\n//                       />\n//                     )}\n\n//                     <input\n//                       type=\"email\"\n//                       name=\"email\"\n//                       placeholder=\"Email\"\n//                       value={formData.email}\n//                       onChange={handleChange}\n//                       required\n//                       className={`input-field ${currentTheme}`}\n//                     />\n\n//                     <input\n//                       type=\"password\"\n//                       name=\"password\"\n//                       placeholder=\"Password\"\n//                       value={formData.password}\n//                       onChange={handleChange}\n//                       required\n//                       className={`input-field ${currentTheme}`}\n//                     />\n\n//                     {!isLogin && (\n//                       <input\n//                         type=\"password\"\n//                         name=\"confirmPassword\"\n//                         placeholder=\"Confirm Password\"\n//                         value={formData.confirmPassword}\n//                         onChange={handleChange}\n//                         required\n//                         className={`input-field ${currentTheme}`}\n//                       />\n//                     )}\n\n//                     <button type=\"submit\" className=\"submit-button\">\n//                       {isLogin ? 'Sign In' : 'Create Account'}\n//                     </button>\n//                   </form>\n\n//                   <div className=\"or-divider\">OR</div>\n\n//                   <GoogleLogin\n//                     onSuccess={handleGoogleSuccess}\n//                     onError={handleGoogleFailure}\n//                   />\n//                 </>\n//               )}\n\n//               <div className=\"toggle-text\">\n//                 <button\n//                   onClick={() => setIsLogin(!isLogin)}\n//                   className={`toggle-button ${currentTheme}`}\n//                 >\n//                   {isLogin ? (\n//                     <>\n//                       Need an account? <span className=\"underline-text\">Sign up</span>\n//                     </>\n//                   ) : (\n//                     <>\n//                       Already have an account? <span className=\"underline-text\">Sign in</span>\n//                     </>\n//                   )}\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </GoogleOAuthProvider>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from \"react-router-dom\";\nimport { Moon, Sun } from \"lucide-react\";\nimport Dashboard from \"./Dashboard\"; // Import Dashboard\nimport \"./App.css\";\n\nconst GOOGLE_CLIENT_ID =\n  \"23212139674-c1b61g95jaf7as88m353jom7b35t6rfs.apps.googleusercontent.com\"; // Replace with actual Client ID\n\nconst Login = () => {\n  const navigate = useNavigate(); // Allows navigation\n\n  const [isDark, setIsDark] = useState(() => {\n    const savedTheme = localStorage.getItem(\"theme\");\n    return savedTheme ? JSON.parse(savedTheme) : true;\n  });\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", JSON.stringify(isDark));\n  }, [isDark]);\n\n  const toggleTheme = () => {\n    setIsDark((prev) => !prev);\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!isLogin && !formData.name.trim()) {\n      setError(\"Name is required!\");\n      return;\n    }\n\n    if (!isLogin && formData.password !== formData.confirmPassword) {\n      setError(\"Passwords don't match!\");\n      return;\n    }\n\n    setError(\"\");\n    console.log(isLogin ? \"Logging in...\" : \"Signing up...\", formData);\n\n    // Simulate login success by redirecting\n    navigate(\"/dashboard\");\n  };\n\n  const handleGoogleSuccess = (credentialResponse) => {\n    const decoded = jwtDecode(credentialResponse.credential);\n    setUser(decoded);\n    console.log(\"Google User:\", decoded);\n\n    // Redirect to Dashboard\n    navigate(\"/dashboard\");\n  };\n\n  const handleGoogleFailure = () => {\n    setError(\"Google Sign-In failed. Please try again.\");\n  };\n\n  const currentTheme = isDark ? \"dark\" : \"light\";\n\n  return (\n    <GoogleOAuthProvider clientId={GOOGLE_CLIENT_ID}>\n      <div className={`theme-container ${currentTheme}`}>\n        <button onClick={toggleTheme} className={`theme-toggle ${currentTheme}`}>\n          {isDark ? <Sun size={20} /> : <Moon size={20} />}\n        </button>\n\n        <div className=\"main-container\">\n          <div className=\"form-container\">\n            <div className={`form-box ${currentTheme}`}>\n              <h2 className={`title ${currentTheme}`}>\n                {isLogin ? \"Welcome Back\" : \"Create Account\"}\n              </h2>\n\n              {error && (\n                <div className=\"error-message\">\n                  <p className=\"error-text\">{error}</p>\n                </div>\n              )}\n\n              {user ? (\n                <div className=\"user-info\">\n                  <img src={user.picture} alt=\"User\" className=\"user-avatar\" />\n                  <p>{user.name}</p>\n                  <p>{user.email}</p>\n                </div>\n              ) : (\n                <>\n                  <form onSubmit={handleSubmit} className=\"form\">\n                    {!isLogin && (\n                      <input\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"Full Name\"\n                        value={formData.name}\n                        onChange={handleChange}\n                        required={!isLogin}\n                        className={`input-field ${currentTheme}`}\n                      />\n                    )}\n\n                    <input\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      value={formData.email}\n                      onChange={handleChange}\n                      required\n                      className={`input-field ${currentTheme}`}\n                    />\n\n                    <input\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      value={formData.password}\n                      onChange={handleChange}\n                      required\n                      className={`input-field ${currentTheme}`}\n                    />\n\n                    {!isLogin && (\n                      <input\n                        type=\"password\"\n                        name=\"confirmPassword\"\n                        placeholder=\"Confirm Password\"\n                        value={formData.confirmPassword}\n                        onChange={handleChange}\n                        required\n                        className={`input-field ${currentTheme}`}\n                      />\n                    )}\n\n                    <button type=\"submit\" className=\"submit-button\">\n                      {isLogin ? \"Sign In\" : \"Create Account\"}\n                    </button>\n                  </form>\n\n                  <div className=\"or-divider\">OR</div>\n\n                  <GoogleLogin onSuccess={handleGoogleSuccess} onError={handleGoogleFailure} />\n                </>\n              )}\n\n              <div className=\"toggle-text\">\n                <button onClick={() => setIsLogin(!isLogin)} className={`toggle-button ${currentTheme}`}>\n                  {isLogin ? \"Need an account? Sign up\" : \"Already have an account? Sign in\"}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </GoogleOAuthProvider>\n  );\n};\n\n// Main App with Routing\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Login />} />\n        <Route path=\"/dashboard\" element={<Dashboard />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,qBAAqB;AACtE,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AACtF,SAASC,IAAI,EAAEC,GAAG,QAAQ,cAAc;AACxC,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AACrC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,MAAMC,gBAAgB,GACpB,yEAAyE,CAAC,CAAC;;AAE7E,MAAMC,KAAK,GAAGA,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}