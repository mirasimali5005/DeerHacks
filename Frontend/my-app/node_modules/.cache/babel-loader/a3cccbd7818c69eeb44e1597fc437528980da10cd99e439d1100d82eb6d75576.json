{"ast":null,"code":"var _jsxFileName = \"/Users/mirasimali/DeerHacks/Frontend/my-app/src/Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { Moon, Sun, Settings, User } from \"lucide-react\";\n// import \"./Dashboard.css\";\n\n// function Dashboard() {\n//   // --- THEME STATE ---\n//   const [isDark, setIsDark] = useState(() => {\n//     const savedTheme = localStorage.getItem(\"theme\");\n//     return savedTheme ? JSON.parse(savedTheme) : true;\n//   });\n\n//   useEffect(() => {\n//     localStorage.setItem(\"theme\", JSON.stringify(isDark));\n//   }, [isDark]);\n\n//   const toggleTheme = () => {\n//     setIsDark((prev) => !prev);\n//   };\n\n//   const currentTheme = isDark ? \"dark\" : \"light\";\n\n//   return (\n//     <div className={`theme-container ${currentTheme}`}>\n//       <div className=\"main-dashboard-container\">\n//         {/* ========== TOP-LEFT: AR BUTTON ========== */}\n//         <div className=\"top-left\">\n//           <button className=\"message-button\">Message</button>\n//         </div>\n\n//         {/* ========== TOP-RIGHT: PROFILE, SETTINGS, THEME TOGGLE ========== */}\n//         <div className=\"top-right\">\n//           <User size={24} className=\"icon\" title=\"Profile\" />\n//           <Settings size={24} className=\"icon\" title=\"Settings\" />\n//           <button onClick={toggleTheme} className={`theme-toggle ${currentTheme}`}>\n//             {isDark ? <Sun size={20} /> : <Moon size={20} />}\n//           </button>\n//         </div>\n\n//         {/* ========== MINI-MAP / MAIN CONTENT ========== */}\n//         <div className=\"mini-map\">\n//           <p>Mini-Map or Main Content Here</p>\n//         </div>\n\n//         {/* ========== ADD TO AR BUTTON BELOW MINI-MAP ========== */}\n//         <button className=\"add-to-ar-button\">Add to AR</button>\n\n//         {/* ========== MESSAGE BAR (BOTTOM) ========== */}\n//         <div className=\"message-bar-container\">\n//           <input className=\"message-bar\" type=\"text\" placeholder=\"Type a message...\" />\n//           <button className=\"send-button\">Send</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Moon, Sun, User } from \"lucide-react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"100%\",\n  height: \"100%\"\n};\nconst center = {\n  lat: 43.6535,\n  lng: -79.3835\n};\nfunction Dashboard() {\n  _s();\n  // --- THEME STATE ---\n  const [isDark, setIsDark] = useState(() => {\n    const savedTheme = localStorage.getItem(\"theme\");\n    return savedTheme ? JSON.parse(savedTheme) : true;\n  });\n\n  // Optional: State to store markers (e.g., nearby messages)\n  const [markers, setMarkers] = useState([]);\n  useEffect(() => {\n    localStorage.setItem(\"theme\", JSON.stringify(isDark));\n  }, [isDark]);\n\n  // Optional: Fetch nearby messages to display as markers\n  useEffect(() => {\n    fetch(`https://firebase-backend-a2m7.onrender.com/getNearbyMessages?lat=${center.lat}&lng=${center.lng}`).then(res => res.json()).then(data => {\n      // Assume data is an array of messages with \"lat\" and \"lng\"\n      setMarkers(data);\n    }).catch(err => console.error(err));\n  }, []);\n  const toggleTheme = () => {\n    setIsDark(prev => !prev);\n  };\n  const currentTheme = isDark ? \"dark\" : \"light\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `theme-container ${currentTheme}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-left\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"message-button\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-right\",\n        children: [/*#__PURE__*/_jsxDEV(User, {\n          size: 24,\n          className: \"icon\",\n          title: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTheme,\n          className: `theme-toggle ${currentTheme}`,\n          children: isDark ? /*#__PURE__*/_jsxDEV(Sun, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(Moon, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mini-map\",\n        children: /*#__PURE__*/_jsxDEV(LoadScript, {\n          googleMapsApiKey: \"AIzaSyBDzpNk4DWSJjuKcyTEA_8eErVIdMtF0nU\",\n          children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n            mapContainerStyle: containerStyle,\n            center: center,\n            zoom: 12,\n            children: markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n              position: {\n                lat: marker.lat,\n                lng: marker.lng\n              }\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-to-ar-button\",\n        children: \"Add to AR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-bar-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"message-bar\",\n          type: \"text\",\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"O+E4/74UuuRuYZTf8ujOmKV5D3k=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Moon","Sun","User","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","Dashboard","_s","isDark","setIsDark","savedTheme","localStorage","getItem","JSON","parse","markers","setMarkers","setItem","stringify","fetch","then","res","json","data","catch","err","console","error","toggleTheme","prev","currentTheme","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","title","onClick","googleMapsApiKey","mapContainerStyle","zoom","map","marker","index","position","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/mirasimali/DeerHacks/Frontend/my-app/src/Dashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { Moon, Sun, Settings, User } from \"lucide-react\";\n// import \"./Dashboard.css\";\n\n// function Dashboard() {\n//   // --- THEME STATE ---\n//   const [isDark, setIsDark] = useState(() => {\n//     const savedTheme = localStorage.getItem(\"theme\");\n//     return savedTheme ? JSON.parse(savedTheme) : true;\n//   });\n\n//   useEffect(() => {\n//     localStorage.setItem(\"theme\", JSON.stringify(isDark));\n//   }, [isDark]);\n\n//   const toggleTheme = () => {\n//     setIsDark((prev) => !prev);\n//   };\n\n//   const currentTheme = isDark ? \"dark\" : \"light\";\n\n//   return (\n//     <div className={`theme-container ${currentTheme}`}>\n//       <div className=\"main-dashboard-container\">\n//         {/* ========== TOP-LEFT: AR BUTTON ========== */}\n//         <div className=\"top-left\">\n//           <button className=\"message-button\">Message</button>\n//         </div>\n\n//         {/* ========== TOP-RIGHT: PROFILE, SETTINGS, THEME TOGGLE ========== */}\n//         <div className=\"top-right\">\n//           <User size={24} className=\"icon\" title=\"Profile\" />\n//           <Settings size={24} className=\"icon\" title=\"Settings\" />\n//           <button onClick={toggleTheme} className={`theme-toggle ${currentTheme}`}>\n//             {isDark ? <Sun size={20} /> : <Moon size={20} />}\n//           </button>\n//         </div>\n\n//         {/* ========== MINI-MAP / MAIN CONTENT ========== */}\n//         <div className=\"mini-map\">\n//           <p>Mini-Map or Main Content Here</p>\n//         </div>\n\n//         {/* ========== ADD TO AR BUTTON BELOW MINI-MAP ========== */}\n//         <button className=\"add-to-ar-button\">Add to AR</button>\n\n//         {/* ========== MESSAGE BAR (BOTTOM) ========== */}\n//         <div className=\"message-bar-container\">\n//           <input className=\"message-bar\" type=\"text\" placeholder=\"Type a message...\" />\n//           <button className=\"send-button\">Send</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\n\n\nimport React, { useState, useEffect } from \"react\";\nimport { Moon, Sun, User } from \"lucide-react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\nimport \"./Dashboard.css\";\n\nconst containerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\nconst center = {\n  lat: 43.6535,\n  lng: -79.3835,\n};\n\nfunction Dashboard() {\n  // --- THEME STATE ---\n  const [isDark, setIsDark] = useState(() => {\n    const savedTheme = localStorage.getItem(\"theme\");\n    return savedTheme ? JSON.parse(savedTheme) : true;\n  });\n\n  // Optional: State to store markers (e.g., nearby messages)\n  const [markers, setMarkers] = useState([]);\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", JSON.stringify(isDark));\n  }, [isDark]);\n\n  // Optional: Fetch nearby messages to display as markers\n  useEffect(() => {\n    fetch(`https://firebase-backend-a2m7.onrender.com/getNearbyMessages?lat=${center.lat}&lng=${center.lng}`)\n      .then((res) => res.json())\n      .then((data) => {\n        // Assume data is an array of messages with \"lat\" and \"lng\"\n        setMarkers(data);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  const toggleTheme = () => {\n    setIsDark((prev) => !prev);\n  };\n\n  const currentTheme = isDark ? \"dark\" : \"light\";\n\n  return (\n    <div className={`theme-container ${currentTheme}`}>\n      <div className=\"main-dashboard-container\">\n        {/* ========== TOP-LEFT: AR BUTTON ========== */}\n        <div className=\"top-left\">\n          <button className=\"message-button\">Message</button>\n        </div>\n\n        {/* ========== TOP-RIGHT: PROFILE & THEME TOGGLE ========== */}\n        <div className=\"top-right\">\n          <User size={24} className=\"icon\" title=\"Profile\" />\n          <button onClick={toggleTheme} className={`theme-toggle ${currentTheme}`}>\n            {isDark ? <Sun size={20} /> : <Moon size={20} />}\n          </button>\n        </div>\n\n        {/* ========== MINI-MAP / MAIN CONTENT ========== */}\n        <div className=\"mini-map\">\n          <LoadScript googleMapsApiKey=\"AIzaSyBDzpNk4DWSJjuKcyTEA_8eErVIdMtF0nU\">\n            <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={12}>\n              {/* Render markers if any */}\n              {markers.map((marker, index) => (\n                <Marker key={index} position={{ lat: marker.lat, lng: marker.lng }} />\n              ))}\n            </GoogleMap>\n          </LoadScript>\n        </div>\n\n        {/* ========== ADD TO AR BUTTON BELOW MINI-MAP ========== */}\n        <button className=\"add-to-ar-button\">Add to AR</button>\n\n        {/* ========== MESSAGE BAR (BOTTOM) ========== */}\n        <div className=\"message-bar-container\">\n          <input className=\"message-bar\" type=\"text\" placeholder=\"Type a message...\" />\n          <button className=\"send-button\">Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}